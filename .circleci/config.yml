# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

orbs:
  win: circleci/windows@2.2.0

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16.3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: make test

      # run tests!
      - run: make build

      # upload coverage
      # - run: out/codecov-linux -f coverage/cobertura-coverage.xml -F build

      # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root
          paths:
            - out
            - coverage

  test-linux:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16.3
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - run: mv out/codecov ./
      - run:
          name: Run Linux binary (dry run)
          command: |
            ./codecov -f coverage/cobertura-coverage.xml -F linux -d -Z
      - run:
          name: Run Linux binary (upload)
          command: |
            ./codecov -f coverage/cobertura-coverage.xml -F linux -Z

  test-macos:
    macos: # indicate that we are using the macOS executor
      xcode: "10.0.0" # indicate our selected version of Xcode
    steps: # a series of commands to run
      - attach_workspace:
          at: .
      - run: mv out/codecov-macos ./
      - run:
          name: Run MacOS binary (dry-run)
          command: |
            ./codecov-macos -f coverage/cobertura-coverage.xml -F macos -d -Z -R ..
      - run:
          # run our tests using xcode's cli tool `xcodebuild`
          name: Run MacOS binary (upload)
          command: |
            ./codecov-macos -f coverage/cobertura-coverage.xml -F macos -Z -R ..

  test-windows:
    executor: win/default
    steps:
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - run:
          name: Build Windows Binary
          command: |
            npm ci
            npm run prebuild
            npm run build-windows
      - run: mv out/codecov.exe ./
      - run:
          name: Run Windows binary (dry-run)
          command: |
            codecov.exe -f coverage/cobertura-coverage.xml -F windows -d -Z
          shell: cmd.exe
      - run:
          name: Run Windows binary (upload)
          command: |
            codecov.exe -f coverage/cobertura-coverage.xml -F windows -Z
          shell: cmd.exe

workflows:
  version: 2

  "Build and Test":
    jobs:
      - build
      - test-linux:
          requires:
            - build
      - test-macos:
          requires:
            - build
      - test-windows:
          requires:
            - build
