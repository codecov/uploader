diff --git a/SConscript b/SConscript
index f12973d..f812a87 100644
--- a/SConscript
+++ b/SConscript
@@ -93,7 +93,7 @@ def CheckMyFun(context, name, code, header):
 
 def CheckLibs(context, name, libs, header):
     context.Message("Checking for C++ library {0}... ".format(name))
-    libs = [libs] if isinstance(libs, types.StringTypes) else libs
+    libs = [libs] if isinstance(libs, (str,)) else libs
     for lib in libs:
         if os.path.isabs(lib):
             context.env.Append(LIBS=File(lib))
@@ -171,21 +171,21 @@ DEFS = {}
 failure = False
 
 if not conf.CheckBison():
-    print 'error: no usable bison version found'
+    print('error: no usable bison version found')
     failure = True
 
 if not conf.CheckRe2c():
-    print 'error: no usable re2c version found'
+    print('error: no usable re2c version found')
     failure = True
 
 if not conf.CheckCXX():
-    print 'error: no usable C++ compiler found'
-    print "Please check the log file for further information: " + log_file
+    print('error: no usable C++ compiler found')
+    print("Please check the log file for further information: " + log_file)
     Exit(1)
 
 if not conf.CheckSHCXX():
-    print 'error: no usable (shared) C++ compiler found'
-    print "Please check the log file for further information: " + log_file
+    print('error: no usable (shared) C++ compiler found')
+    print("Please check the log file for further information: " + log_file)
     Exit(1)
 
 with_python = False
@@ -241,7 +241,7 @@ if env['WITH_TBB'] == "auto":
         with_tbb = True
 elif env['WITH_TBB']:
     if not claspConf.CheckLibs("tbb", env['WITH_TBB'], 'tbb/tbb.h'):
-        print 'error: tbb library not found'
+        print('error: tbb library not found')
         failure = True
     else:
         with_tbb = True
@@ -249,7 +249,7 @@ if with_tbb:
     DEFS["WITH_THREADS"] = 1
     if claspConf.CheckNeedRT():
         if not claspConf.CheckLibWithHeader('rt', 'time.h', 'C++'):
-            print 'error: rt library not found'
+            print('error: rt library not found')
             failure = True
 
 claspEnv = claspConf.Finish()
@@ -267,14 +267,14 @@ if env['WITH_CPPUNIT']:
     elif testConf.CheckLibs("cppunit", env['WITH_CPPUNIT'], 'cppunit/TestFixture.h'):
         with_cppunit = True
     else:
-        print 'error: cppunit library not found'
+        print('error: cppunit library not found')
         failure = True
     testEnv  = testConf.Finish()
 
 # {{{1 Check configuration
 
 if failure:
-    print "Please check the log file for further information: " + log_file
+    print("Please check the log file for further information: " + log_file)
     Exit(1)
 
 # {{{1 Opts: Library
