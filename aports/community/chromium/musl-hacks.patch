--- ./base/debug/stack_trace.cc
+++ ./base/debug/stack_trace.cc
@@ -233,7 +233,7 @@
 }
 std::string StackTrace::ToStringWithPrefix(const char* prefix_string) const {
   std::stringstream stream;
-#if !defined(__UCLIBC__) && !defined(_AIX)
+#if defined(__GLIBC__) && !defined(_AIX)
   OutputToStreamWithPrefix(&stream, prefix_string);
 #endif
   return stream.str();
--- ./net/socket/udp_socket_posix.cc
+++ ./net/socket/udp_socket_posix.cc
@@ -1191,7 +1191,7 @@
     msg_iov->push_back({const_cast<char*>(buffer->data()), buffer->length()});
   msgvec->reserve(buffers.size());
   for (size_t j = 0; j < buffers.size(); j++)
-    msgvec->push_back({{nullptr, 0, &msg_iov[j], 1, nullptr, 0, 0}, 0});
+    msgvec->push_back({{nullptr, 0, &msg_iov[j], 1, 0, 0, 0}, 0});
   int result = HANDLE_EINTR(Sendmmsg(fd, &msgvec[0], buffers.size(), 0));
   SendResult send_result(0, 0, std::move(buffers));
   if (result < 0) {
diff --git a/chrome/common/string_matching/fuzzy_tokenized_string_match.cc b/chrome/common/string_matching/fuzzy_tokenized_string_match.cc
index 8351fa7..7ace813 100644
--- ./chrome/common/string_matching/fuzzy_tokenized_string_match.cc
+++ ./chrome/common/string_matching/fuzzy_tokenized_string_match.cc
@@ -6,6 +6,7 @@
 
 #include <algorithm>
 #include <iterator>
+#include <cmath>
 
 #include "base/i18n/case_conversion.h"
 #include "base/metrics/field_trial_params.h"
