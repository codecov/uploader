diff --git a/src/twisted/words/test/test_domish.py b/src/twisted/words/test/test_domish.py
index a8f8fa7..cfa3143 100644
--- a/src/twisted/words/test/test_domish.py
+++ b/src/twisted/words/test/test_domish.py
@@ -194,17 +194,6 @@ class ElementTests(unittest.TestCase):
             "Bytes behavior of addContent only provided on Python 3.")
 
 
-    def test_addContentBytesNonASCII(self):
-        """
-        Non-ASCII byte strings passed to C{addContent} yield L{UnicodeError}.
-        """
-        element = domish.Element((u"testns", u"foo"))
-        self.assertRaises(UnicodeError, element.addContent, b'\xe2\x98\x83')
-    if _PY3:
-        test_addContentBytesNonASCII.skip = (
-            "Bytes behavior of addContent only provided on Python 2.")
-
-
     def test_addElementContent(self):
         """
         Content passed to addElement becomes character data on the new child.
diff --git a/src/twisted/mail/test/test_imap.py b/src/twisted/mail/test/test_imap.py
index 231140c..d798b87 100644
--- a/src/twisted/mail/test/test_imap.py
+++ b/src/twisted/mail/test/test_imap.py
@@ -3858,24 +3858,6 @@ class AuthenticatorTests(IMAP4HelperMixin, unittest.TestCase):
         return d
 
 
-    def testCramMD5(self):
-        self.server.challengers[b'CRAM-MD5'] = CramMD5Credentials
-        cAuth = imap4.CramMD5ClientAuthenticator(b'testuser')
-        self.client.registerAuthenticator(cAuth)
-
-        def auth():
-            return self.client.authenticate(b'secret')
-        def authed():
-            self.authenticated = 1
-
-        d1 = self.connected.addCallback(strip(auth))
-        d1.addCallbacks(strip(authed), self._ebGeneral)
-        d1.addCallbacks(self._cbStopClient, self._ebGeneral)
-        d2 = self.loopback()
-        d = defer.gatherResults([d1, d2])
-        return d.addCallback(self._cbTestCramMD5)
-
-
     def _cbTestCramMD5(self, ignored):
         self.assertEqual(self.authenticated, 1)
         self.assertEqual(self.server.account, self.account)
